/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -c DownloadAdaptor -a download_adaptor.h:download_adaptor.cpp com.canonical.applications.download.xml
 *
 * qdbusxml2cpp is Copyright (C) 2015 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef DOWNLOAD_ADAPTOR_H_1446124951
#define DOWNLOAD_ADAPTOR_H_1446124951

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include <ubuntu/download_manager/metatypes.h>

QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.canonical.applications.Download
 */
class DownloadAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.canonical.applications.Download")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.canonical.applications.Download\">\n"
"    <method name=\"totalSize\">\n"
"      <arg direction=\"out\" type=\"t\" name=\"total\"/>\n"
"    </method>\n"
"    <method name=\"progress\">\n"
"      <arg direction=\"out\" type=\"t\" name=\"received\"/>\n"
"    </method>\n"
"    <method name=\"metadata\">\n"
"      <annotation value=\"QVariantMap\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"      <arg direction=\"out\" type=\"a{sv}\" name=\"data\"/>\n"
"    </method>\n"
"    <method name=\"setMetadata\">\n"
"      <annotation value=\"QVariantMap\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"      <arg direction=\"in\" type=\"a{sv}\" name=\"data\"/>\n"
"    </method>\n"
"    <method name=\"throttle\">\n"
"      <arg direction=\"out\" type=\"t\" name=\"speed\"/>\n"
"    </method>\n"
"    <method name=\"setThrottle\">\n"
"      <arg direction=\"in\" type=\"t\" name=\"speed\"/>\n"
"    </method>\n"
"    <method name=\"headers\">\n"
"      <annotation value=\"StringMap\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"      <arg direction=\"out\" type=\"a{ss}\" name=\"headers\"/>\n"
"    </method>\n"
"    <method name=\"setHeaders\">\n"
"      <annotation value=\"StringMap\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"      <arg direction=\"in\" type=\"a{ss}\" name=\"headers\"/>\n"
"    </method>\n"
"    <method name=\"setDestinationDir\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"path\"/>\n"
"    </method>\n"
"    <method name=\"allowGSMDownload\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"allowed\"/>\n"
"    </method>\n"
"    <method name=\"isGSMDownloadAllowed\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"allowed\"/>\n"
"    </method>\n"
"    <method name=\"filePath\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"filepath\"/>\n"
"    </method>\n"
"    <method name=\"state\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"state\"/>\n"
"    </method\n"
"    <method name=\"start\"/>\n"
"    <method name=\"pause\"/>\n"
"    <method name=\"resume\"/>\n"
"    <method name=\"cancel\"/>\n"
"    <method name=\"collected\"/>\n"
"    <signal name=\"started\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"success\"/>\n"
"    </signal>\n"
"    <signal name=\"paused\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"success\"/>\n"
"    </signal>\n"
"    <signal name=\"resumed\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"success\"/>\n"
"    </signal>\n"
"    <signal name=\"canceled\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"success\"/>\n"
"    </signal>\n"
"    <signal name=\"finished\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"path\"/>\n"
"    </signal>\n"
"    <signal name=\"error\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"error\"/>\n"
"    </signal>\n"
"    <signal name=\"authError\">\n"
"      <annotation value=\"AuthErrorStruct\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"      <arg direction=\"out\" type=\"(is)\" name=\"error\"/>\n"
"    </signal>\n"
"    <signal name=\"httpError\">\n"
"      <annotation value=\"HttpErrorStruct\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"      <arg direction=\"out\" type=\"(is)\" name=\"error\"/>\n"
"    </signal>\n"
"    <signal name=\"networkError\">\n"
"      <annotation value=\"NetworkErrorStruct\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"      <arg direction=\"out\" type=\"(is)\" name=\"error\"/>\n"
"    </signal>\n"
"    <signal name=\"processError\">\n"
"      <annotation value=\"ProcessErrorStruct\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"      <arg direction=\"out\" type=\"(isiss)\" name=\"error\"/>\n"
"    </signal>\n"
"    <signal name=\"hashError\">\n"
"      <annotation value=\"HashErrorStruct\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"      <arg direction=\"out\" type=\"(sss)\" name=\"error\"/>\n"
"    </signal>\n"
"    <signal name=\"progress\">\n"
"      <arg direction=\"out\" type=\"t\" name=\"received\"/>\n"
"      <arg direction=\"out\" type=\"t\" name=\"total\"/>\n"
"    </signal>\n"
"    <signal name=\"processing\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"path\"/>\n"
"    </signal>\n"
"    <property access=\"read\" type=\"b\" name=\"ShowInIndicator\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"Title\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"ClickPackage\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"DownloadOwner\"/>\n"
"  </interface>\n"
        "")
public:
    DownloadAdaptor(QObject *parent);
    virtual ~DownloadAdaptor();

public: // PROPERTIES
    Q_PROPERTY(QString ClickPackage READ clickPackage)
    QString clickPackage() const;

    Q_PROPERTY(QString DownloadOwner READ downloadOwner)
    QString downloadOwner() const;

    Q_PROPERTY(bool ShowInIndicator READ showInIndicator)
    bool showInIndicator() const;

    Q_PROPERTY(QString Title READ title)
    QString title() const;

public Q_SLOTS: // METHODS
    void allowGSMDownload(bool allowed);
    void cancel();
    void collected();
    QString filePath();
    StringMap headers();
    bool isGSMDownloadAllowed();
    QVariantMap metadata();
    void pause();
    qulonglong progress();
    void resume();
    void setDestinationDir(const QString &path);
    void setHeaders(StringMap headers);
    void setMetadata(const QVariantMap &data);
    void setThrottle(qulonglong speed);
    void start();
    int state();
    qulonglong throttle();
    qulonglong totalSize();
Q_SIGNALS: // SIGNALS
    void authError(AuthErrorStruct error);
    void canceled(bool success);
    void error(const QString &error);
    void finished(const QString &path);
    void hashError(HashErrorStruct error);
    void httpError(HttpErrorStruct error);
    void networkError(NetworkErrorStruct error);
    void paused(bool success);
    void processError(ProcessErrorStruct error);
    void processing(const QString &path);
    void progress(qulonglong received, qulonglong total);
    void resumed(bool success);
    void started(bool success);
};

#endif
